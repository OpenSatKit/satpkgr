#!/usr/bin/env ruby
require 'gli'
require_relative File.join('..', 'lib', 'satpkgr')

include GLI::App

program_desc 'Manage OpenSatKit applications'

version Satpkgr::VERSION

subcommand_option_handling :normal
arguments :strict

desc 'Initializes a new satpkgr project'
arg_name ''
skips_pre
command :init do |c|
  c.action do |global_options, options, args|
    CommandRunner.init(global_options, options, args)
  end
end

desc 'Installs an application from a github repository'
arg_name '<username/repository>'
command :install do |c|
  c.action do |global_options, options, args|
    @runner.install(global_options, options, args)
  end
end

desc 'Uninstalls an application'
arg_name '<username/repository>'
command :uninstall do |c|
  c.action do |global_options, options, args|
    @runner.uninstall(global_options, options, args)
  end
end

desc 'Removes all installed packages'
arg_name ''
command :clean do |c|
  c.action do |global_options, options, args|
    @runner.clean(global_options, options, args)
  end
end

pre do |global, command, options, args|
  @runner = CommandRunner.new(global, command, options, args)
  true
end

class CommandRunner
  def initialize(_global, command, _options, _args)
    @pkgr = SatPkgr::SatPkgrController.new(Dir.pwd)
  end

  def self.init(_global_options, _options, _args)
    SatPkgr::SatPkgrController.init_package(Dir.pwd)
  end

  def install(_global_options, _options, args)
    @pkgr.install_multiple_packages(args)
  end

  def uninstall(_global_options, _options, args)
    @pkgr.uninstall_multiple_packages(args)
  end

  def clean(_global_options, _options, _args)
    @pkgr.remove_package_directory
  end
end

exit run(ARGV)
